<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.staticfinal.module.user.UserDao">

	<resultMap type="com.staticfinal.module.user.UserDto"
		id="resultMapObj"></resultMap>
	<sql id="selectCommon">
		from
		user as a
		left join code as b on a.gender = b.seq
		where 1=1
		<!-- <if test="shUseNy != null and !shUseNy.equals('')">AND a.ifcgUseNy 
			= #{shUseNy}</if> -->
		<if test="shDelNy != null and !shDelNy.equals('')">AND a.urDelNy = #{shDelNy}</if>

		<choose>
			<when
				test="shOptionDate != null and !shOptionDate.equals('') and shOptionDate == 1">
				AND a.dob BETWEEN
				#{shDateStart} AND #{shDateEnd}
			</when>
			<when test="shOptionDate == 2">AND
				a.urReg BETWEEN #{shDateStartDB} AND #{shDateEndDB}
			</when>
			<when test="shOptionDate == 3">AND
				a.urMof BETWEEN #{shDateStartDB} AND #{shDateEndDB}
			</when>
		</choose>
		<choose>
			<when test="shOption == 1">AND a.seq = #{shValue}</when>
			<when test="shOption == 2">AND a.name LIKE CONCAT('%',#{shValue},'%')</when>
			<when test="shOption == 3">AND a.nickName LIKE CONCAT('%',#{shValue},'%')</when>
			<when test="shOption == 4">AND b.cdName LIKE CONCAT('%',#{shValue},'%')</when>
		</choose>

	</sql>
	<select id="selectCount" resultType="Integer">
		select count(*)
		<include refid="selectCommon"></include>
	</select>

	<select id="userList" resultMap="resultMapObj">
		select
		a.seq as urSeq,
		a.name,
		a.gender,
		a.dob,
		a.nickName,
		a.id,
		a.password,
		a.email,
		a.postalCode,
		a.betterAddress,
		b.cdName,
		a.urDelNy,
		a.urReg,
		a.urMof
		<include refid="selectCommon"></include>
		order by urSeq desc
		limit #{startRnumForMysql},#{rowNumToShow}
	</select>
	<select id="userOne" resultMap="resultMapObj">
		select
		a.seq as urSeq,
		a.name,
		a.gender,
		a.dob,
		a.nickName,
		a.id,
		a.password,
		a.email,
		a.postalCode,
		a.streetAddress,
		a.betterAddress,
		a.notes,
		a.urDelNy
		from
		user as a
		where 1=1 and
		a.seq = #{urSeq}
	</select>
	<select id="loginOne" resultMap="resultMapObj">
		select
		a.seq as urSeq,
		a.name,
		a.gender,
		a.dob,
		a.nickName,
		a.id,
		a.password,
		a.email,
		a.postalCode,
		a.betterAddress,
		a.urDelNy
		from
		user as a
		where 1=1 and
		a.id = #{id}

	</select>
	<select id="wishListCount" resultType="integer">
		select count(*)
		from
		wishlist as a
		left join betterBlog as b on b.seq = a.betterBlog_seq
		left join user as c on c.seq = a.user_seq
		where 1=1
		and b.bgDelNy = 0
		and a.user_seq = #{urSeq}
	</select>
	<select id="wishListList" resultMap="resultMapObj">
		select
		a.betterBlog_seq,
		a.seq as wSeq,
		b.title,
		b.blogCategory_seq,
		(select c.nickName from user
		as c where 1=1 and
		c.seq = b.user_seq) as nickName
		from
		wishlist as a
		left join betterBlog as b
		on b.seq = a.betterBlog_seq
		left join user as c on c.seq = a.user_seq
		where 1=1
		and b.bgDelNy = 0
		and a.user_seq = #{urSeq}
	</select>
	<select id="buyPeople" resultMap="resultMapObj">
		select
		a.id,
		a.nickName
		from
		user
		as a
		where 1=1
		and a.seq = #{urSeq}
	</select>
	<select id="sellPeople" resultMap="resultMapObj">
		select
		a.id,
		a.nickName,
		b.title,
		c.item,
		c.infoPrice,
		c.seq as infoseq
		from
		user as a
		left join
		betterBlog as b on a.seq = b.user_seq
		left join clotheInfo as c on
		c.betterBlog_seq = b.seq
		where 1=1
		and c.seq = #{infoseq}
	</select>

	<select id="idDistinct" resultType="Integer">
		select
		count(*)
		from
		user as a
		where 1=1
		and binary a.id = binary #{id}
	</select>
	<select id="pwDistinct" resultType="Integer">
		select
		count(*)
		from
		user as a
		where 1=1
		and seq = #{urSeq}
		and binary a.password = binary #{password}
	</select>
	<select id="wishCount" resultType="Integer">
		select count(*)
		from
		wishlist as a
		left join betterBlog as b on a.betterBlog_seq = b.seq
		where 1=1
		and b.bgDelNy = 0
		and a.user_seq = #{urSeq}

	</select>
	<sql id="myBlogCommon">
		from
		user as a
		left join betterBlog as b on a.seq = b.user_seq
		where 1=1
		and a.seq = #{urSeq}
	</sql>
	<select id="myBlogCount" resultType="integer">
		select count(*)
		<include refid="myBlogCommon"></include>
	</select>
	<select id="myBlogList" resultMap="resultMapObj">
		select
		a.nickName,
		b.title,
		b.seq,
		b.blogCategory_seq
		<include refid="myBlogCommon"></include>
		limit #{startRnumForMysql},#{rowNumToShow}
	</select>
	<insert id="userInsert" useGeneratedKeys="true"
		keyProperty="lastSeq">
		insert into
		user
		(
		name,
		gender,
		dob,
		nickName,
		id,
		password,
		email,
		postalCode,
		betterAddress,
		streetAddress,
		notes,
		latitude,
		longitude,
		urReg
		)values
		(
		#{name},
		#{gender},
		#{dob},
		#{nickName},
		#{id},
		#{password},
		#{email},
		#{postalCode},
		#{betterAddress},
		#{streetAddress},
		#{notes},
		#{latitude},
		#{longitude},
		now()
		)
	</insert>
	<insert id="buyInsert">
		insert into buyInfo
		(
		user_seq,
		clotheInfo_seq,
		buyDate,
		paymentCategory_seq
		)
		values
		(
		#{user_seq},
		#{clotheInfo_seq},
		now(),
		1
		)
	</insert>
	<select id="buyInfoSelect" resultType="java.lang.Integer">
		select
		a.clotheInfo_seq
		from
		buyInfo as a
		where 1=1
		and a.user_seq = #{urSeq}

	</select>
	<select id="buySelectCount" resultType="integer">
		select count(*)
		from
		buyInfo as a
		left join clotheInfo as c on c.seq = a.clotheInfo_seq
		left
		join betterBlog as b on b.seq = c.betterBlog_seq
		where 1=1
		and
		a.user_seq = #{urSeq}
	</select>
	<select id="buySelect" resultMap="resultMapObj">
		select
		a.user_seq,
		a.clotheInfo_seq,
		a.buyDate,
		b.title,
		b.seq,
		b.blogCategory_seq,
		c.item,
		c.infoPrice
		from
		buyInfo as a
		left join clotheInfo as c on c.seq =
		a.clotheInfo_seq
		left join betterBlog as b on b.seq = c.betterBlog_seq
		where 1=1
		and a.user_seq = #{urSeq}
	</select>
	<select id="buyCount" resultType="integer">
		select count(*)
		from
		buyInfo
		where 1=1
		and user_seq = #{user_seq}
		and clotheInfo_seq =
		#{clotheInfo_seq}

	</select>
	<update id="userUpdate">
		update user
		set
		name = #{name},
		gender = #{gender},
		dob =
		#{dob},
		nickName = #{nickName},
		id = #{id},
		password = #{password},
		email
		= #{email},
		postalCode = #{postalCode},
		betterAddress =
		#{betterAddress},
		urMof = now()
		where 1=1
		and seq = #{urSeq}

	</update>
	<update id="userPwupdate">
		update user
		set
		password = #{password}
		where 1=1
		and seq = #{urSeq}
	</update>
	<update id="userUelete">
		update user
		set
		urDelNy = 1
		where 1=1
		and seq = #{urSeq}

	</update>
	<update id="userAddressUpdate">
		update user
		set 
		streetAddress = #{streetAddress},
		postalCode = #{postalCode},
		notes = #{notes},
		betterAddress = #{betterAddress}
		where 1=1 
		and seq = #{urSeq}
		

	</update>
	<delete id="wishDelete">
		delete from wishlist
		where 1=1
		and user_seq =
		#{urSeq}
		and
		betterBlog_seq = #{betterBlog_seq}
	</delete>
</mapper>